{# STYLESHEETS #}

{% macro stylesheets(no_externals) %}
    {% if not no_externals %}
        <link href="//cdn.jsdelivr.net/foundation/4.3.2/css/normalize.css" rel="stylesheet">
        <link href="//cdn.jsdelivr.net/foundation/4.3.2/css/foundation.min.css" rel="stylesheet">
    {% endif %}

    <style>
        .pull-right {
            float: right;
        }

        .clearfix {
            clear: both;
        }

        .full-width {
            width: 100%;
        }

        .pager-filter-container {
            display: none;
            margin-left: -15px;
            margin-top: -15px;
            padding-top: 10px;
        }

        .pager-filter:hover>.pager-filter-container {
            display: block;
            z-index: 1000;
            position: absolute;
            padding-bottom: 160px; /* Large padding-bottom to block mouseout */
        }

        .pager-filter-container-body {
            position: relative;
            background-color: white;
            border: 1px solid #DDDDDD;
            padding: 20px 40px 5px;
            -webkit-border-radius: 0px 0px 5px 5px;
               -moz-border-radius: 0px 0px 5px 5px;
                    border-radius: 0px 0px 5px 5px;
        }

        .pager-filter-container-body:after, .pager-filter-container-body:before {
            bottom: 100%;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }

        .pager-filter-container-body:after {
            border-color: rgba(255, 255, 255, 0);
            border-bottom-color: #ffffff;
            border-width: 10px;
            left: 15%;
            margin-left: -10px;
        }

        .pager-filter-container-body:before {
            border-color: rgba(221, 221, 221, 0);
            border-bottom-color: #DDDDDD;
            border-width: 11px;
            left: 15%;
            margin-left: -11px;
        }
    </style>
{% endmacro %}


{# JAVASCRIPTS #}

{% macro javascripts() %}
    <script>
      document.write('<script src=//cdn.jsdelivr.net/foundation/4.3.2/js/vendor/'
        + ('__proto__' in {} ? 'zepto' : 'jquery')
        + '.js><\/script>');
    </script>
    <script src="//cdn.jsdelivr.net/foundation/4.3.2/js/foundation.min.js"></script>
    <script type="text/javascript">$(document).foundation();</script>
{% endmacro %}


{# HEADER #}

{% macro toolbar(pager) %}
    {% import _self as base %}

    <div class="pull-right">
        {{ base.itemCountPerPage(pager) }}
        {{ base.refresh(pager) }}

        {# Allows submitting filters with 'Enter' #}
        <button type="submit" class="masked"></button>
    </div>

    <div class="clearfix"></div>
{% endmacro %}


{# PAGINATION #}

{% macro paginate(pager) %}
    {% set range = pager_page_range(pager) %}

    <ul class="pagination pull-right">
        {% if 1 not in range %}
            <li>
                <a href="{{ pager_path(pager, 1) }}">1</a>
            </li>
        {% endif %}

        {% if pager.previousPageNumber is defined %}
            <li class="arrow">
                <a href="{{ pager_path(pager, pager.previousPageNumber) }}">&laquo;</a>
            </li>
        {% endif %}

        {% if pager.pageCount == 0 %}
            <li class="current">
                <a href="{{ pager_path(pager, pager.pageCount) }}">{{ pager.pageCount }}</a>
            </li>
        {% else %}
            {% for page in range %}
                <li {% if page == pager.currentPageNumber %}class="current"{% endif %}>
                    <a href="{{ pager_path(pager, page) }}">{{ page }}</a>
                </li>
            {% endfor %}
        {% endif %}

        {% if pager.nextPageNumber is defined %}
            <li class="arrow">
                <a href="{{ pager_path(pager, pager.nextPageNumber) }}">&raquo;</a>
            </li>
        {% endif %}

        <li class="unavailable">
            <span>/</span>
        </li>

        <li>
            <a href="{{ pager_path(pager, pager.pageCount) }}">{{ pager.pageCount }}</a>
        </li>
    </ul>

    <div class="clearfix"></div>
{% endmacro %}


{# ORDER BY #}

{% macro orderBy(pager, alias, label) %}
    {% if pager.orderBy[alias] is defined %}
        {% if pager.orderBy[alias] == 'desc' %}
            <a href="{{ pager_order_path(pager, alias, 'asc') }}">
                {{ label }}
                &#x25BC;
            </a>
        {% else %}
            <a href="{{ pager_order_path(pager, alias, 'desc') }}">
                {{ label }}
                &#x25B2;
            </a>
        {% endif %}
    {% else %}
            <a href="{{ pager_order_path(pager, alias, 'asc') }}">
                {{ label }}
            </a>
    {% endif %}
{% endmacro %}


{# ITEMS COUNT PER PAGE #}

{% macro itemCountPerPage(pager) %}
    {% import _self as base %}

    <a href="#" data-dropdown="drop-ipp" class="button small dropdown">{{ base.resultsRange(pager) }}</a>

    <ul id="drop-ipp" class="f-dropdown">
        {% for nb in pager.itemCountPerPageChoices %}
            <li>
                <a href="{{ pager_per_page_Path(pager, nb) }}">
                    {% if pager.itemCountPerPage == nb %}
                        <strong>{{ nb }}</strong>
                    {% else %}
                        {{ nb }}
                    {% endif %}
                </a>
            </li>
        {% endfor %}
    </ul>
{% endmacro %}


{# RESULTS RANGE #}

{% macro resultsRange(pager) %}
    {% if pager.totalItemCount %}
        {{ '%first% to %last% on %total%'|trans({'%first%': pager.firstItemNumber, '%last%': pager.lastItemNumber, '%total%': pager.totalItemCount}, 'pager') }}
    {% else %}
        {{ 'No data to display'|trans({}, 'pager') }}
    {% endif %}
{% endmacro %}


{# REFRESH #}

{% macro refresh(pager) %}
    <div class="button-group">
        <a class="button small" href="{{ pager_path(pager) }}">
            <span class="glyphicon glyphicon-refresh"></span>
            {{ 'Refresh'|trans({}, 'pager') }}
        </a>
    </div>
{% endmacro %}


{# FILTERS #}

{% macro filter(pager, alias, type) %}
    <div class="pager-filter">
        <input type="hidden" name="{{ pager.filterParam }}[f][{{ alias }}]" value="{{ alias }}"/>
        {% if type == 'boolean' %}
            {% set value = pager.filter.getValue(alias)|default('') %}
            <select name="{{ pager.filterParam }}[v][{{ alias }}]" class="form-control input-sm">
                <option value="">{{ 'Filter...'|trans({}, 'pager') }}</option>
                <option value="1" {% if value == '1' %}selected="selected"{% endif %}>{{ 'Yes'|trans({}, 'pager') }}</option>
                <option value="0" {% if value == '0' %}selected="selected"{% endif %}>{{ 'No'|trans({}, 'pager') }}</option>
            </select>
        {% else %}
            <input type="text"   name="{{ pager.filterParam }}[v][{{ alias }}]" value="{{ pager.filter.getValue(alias)|default('') }}" class="form-control input-sm" placeholder="{{ 'Filter...'|trans({}, 'pager') }}"/>
        {% endif %}

        {% if type == 'object' or type == 'boolean' %}
            <input type="hidden" name="{{ pager.filterParam }}[o][{{ alias }}]" value="="/>
        {% else %}
            <div class="pager-filter-container bottom">
                <div class="pager-filter-container-body">
                    {% set operator = pager.filter.getOperator(alias)|default('') %}

                    <select name="{{ pager.filterParam }}[o][{{ alias }}]" onchange="$(this).closest('.pager-filter').find('input[type=text]:first').focus()">
                        <option value="~" {% if operator == '~' %}selected="selected"{% endif %}>{{ 'Contains'|trans([], 'pager') }}</option>
                        <option value="!~" {% if operator == '!~' %}selected="selected"{% endif %}>{{ 'Not Contains'|trans([], 'pager') }}</option>
                        <option value="=" {% if operator == '=' %}selected="selected"{% endif %}>{{ 'Equals'|trans([], 'pager') }}</option>
                        <option value="!=" {% if operator == '!=' %}selected="selected"{% endif %}>{{ 'Not Equals'|trans([], 'pager') }}</option>
                        <option value=">" {% if operator == '>' %}selected="selected"{% endif %}>{{ 'Greater'|trans([], 'pager') }}</option>
                        <option value=">=" {% if operator == '>=' %}selected="selected"{% endif %}>{{ 'Greater or Equals'|trans([], 'pager') }}</option>
                        <option value="<" {% if operator == '<' %}selected="selected"{% endif %}>{{ 'Less'|trans([], 'pager') }}</option>
                        <option value="<=" {% if operator == '<=' %}selected="selected"{% endif %}>{{ 'Less or Equals'|trans([], 'pager') }}</option>
                        <option value="X" {% if operator == 'X' %}selected="selected"{% endif %}>{{ 'Null'|trans([], 'pager') }}</option>
                        <option value="!X" {% if operator == '!X' %}selected="selected"{% endif %}>{{ 'Not Null'|trans([], 'pager') }}</option>
                    </select>
                </div>
            </div>
        {% endif %}
    </div>
{% endmacro %}
